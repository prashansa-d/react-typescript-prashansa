{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/ReactProjects/react-typescript-prashansa/react-app/src/screens/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../App.css';\nimport { CardComponent } from '../components/CardComponent';\nimport { CHARACTER_LIST } from '../constants/URLConstants';\nimport { CharaListAction, FavouriteListAction } from '../redux/action/action-creator';\nimport { NavBar } from '../router/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const {\n    isLoading,\n    favouriteList,\n    charList\n  } = useSelector(state => state.mainReducer);\n  const dispatch = useDispatch();\n  const [characterList, setcharacterList] = useState([]); // const [favList, setfavList] = useState<any>([]);\n  // console.log(\"ðŸš€ ~ file: Home.tsx ~ line 20 ~ Home ~ favList\", favouriteList)\n\n  useEffect(() => {\n    fetch(CHARACTER_LIST).then(res => res.json()).then(res => {\n      // console.log(\"ðŸš€ ~ file: Home.tsx ~ line 28 ~ .then ~ res\", res)\n      // var newData = [...res];\n      // newData.forEach(function (file) {\n      //   file.selectedItem = false\n      // })\n      setcharacterList(res);\n      dispatch(CharaListAction(characterList));\n    });\n  }, []); // useEffect(() => {\n  //   if (favList) {\n  //     dispatch(FavouriteListAction(favList));\n  //   }\n  // }, [favList])\n\n  const onClickLike = (item, index) => {\n    const favList = [...favouriteList];\n    console.log(\"fav list\", favList, item.char_id);\n    const indexPostion = favList.findIndex(i => i === item.char_id);\n    console.log(\"ðŸš€  indexPostion\", indexPostion);\n\n    if (indexPostion == -1) {\n      favList.push(item.char_id);\n    } else {\n      favList.splice(indexPostion, 1);\n    }\n\n    dispatch(FavouriteListAction(favList));\n  };\n\n  const mainView = {\n    paddingLeft: '110px'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      onChangeText: text => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"df\",\n      style: mainView,\n      children: characterList.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(CardComponent, {\n          item: item,\n          index: index,\n          onClickFav: (item, index) => {\n            onClickLike(item, index);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"NrBJFDBFbGdgu2ocfu89Kva8JQE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","CardComponent","CHARACTER_LIST","CharaListAction","FavouriteListAction","NavBar","Home","isLoading","favouriteList","charList","state","mainReducer","dispatch","characterList","setcharacterList","fetch","then","res","json","onClickLike","item","index","favList","console","log","char_id","indexPostion","findIndex","i","push","splice","mainView","paddingLeft","text","map"],"sources":["/home/lenovo/ReactProjects/react-typescript-prashansa/react-app/src/screens/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../App.css';\nimport { CardComponent } from '../components/CardComponent';\nimport { CHARACTER_LIST } from '../constants/URLConstants';\nimport { CharaListAction, FavouriteListAction } from '../redux/action/action-creator';\nimport { REMOVE_FAVOURITE_LIST } from '../redux/action/action-typers';\nimport { NavBar } from '../router/NavBar';\n\nexport const Home = () => {\n\n\n\n  const { isLoading, favouriteList, charList } = useSelector((state: any) => state.mainReducer);\n\n  const dispatch = useDispatch();\n\n\n  const [characterList, setcharacterList] = useState<any>([]);\n  // const [favList, setfavList] = useState<any>([]);\n  // console.log(\"ðŸš€ ~ file: Home.tsx ~ line 20 ~ Home ~ favList\", favouriteList)\n\n\n  useEffect(() => {\n    fetch(\n      CHARACTER_LIST)\n      .then((res) => res.json())\n      .then((res) => {\n        // console.log(\"ðŸš€ ~ file: Home.tsx ~ line 28 ~ .then ~ res\", res)\n        // var newData = [...res];\n        // newData.forEach(function (file) {\n        //   file.selectedItem = false\n        // })\n        setcharacterList(res)\n        dispatch(CharaListAction(characterList));\n      })\n  }, [])\n\n  // useEffect(() => {\n\n  //   if (favList) {\n  //     dispatch(FavouriteListAction(favList));\n  //   }\n\n  // }, [favList])\n\n\n\n\n  const onClickLike = (item: any, index: number) => {\n\n    const favList = [...favouriteList];\n    console.log(\"fav list\", favList, item.char_id);\n    const indexPostion = favList.findIndex(i => i === item.char_id)\n    console.log(\"ðŸš€  indexPostion\", indexPostion)\n    if (indexPostion == -1) {\n      favList.push(item.char_id)\n    } else {\n      favList.splice(indexPostion, 1)\n    }\n    dispatch(FavouriteListAction(favList));\n  }\n\n  const mainView = {\n    paddingLeft: '110px'\n  }\n\n  return (\n    <>\n      <NavBar\n        onChangeText={(text: string) => {\n        }}\n      />\n\n      <div className=\"df\" style={mainView}>\n        {characterList.map((item: object, index: number) => {\n          return (\n            <CardComponent\n              item={item}\n              index={index}\n              onClickFav={(item: any, index: number) => {\n                onClickLike(item, index);\n              }}\n            />\n          )\n        })}\n      </div>\n    </>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,YAAP;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,eAAT,EAA0BC,mBAA1B,QAAqD,gCAArD;AAEA,SAASC,MAAT,QAAuB,kBAAvB;;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAIxB,MAAM;IAAEC,SAAF;IAAaC,aAAb;IAA4BC;EAA5B,IAAyCT,WAAW,CAAEU,KAAD,IAAgBA,KAAK,CAACC,WAAvB,CAA1D;EAEA,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;EAGA,MAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAM,EAAN,CAAlD,CATwB,CAUxB;EACA;;EAGAD,SAAS,CAAC,MAAM;IACdkB,KAAK,CACHb,cADG,CAAL,CAEGc,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFjB,EAGGF,IAHH,CAGSC,GAAD,IAAS;MACb;MACA;MACA;MACA;MACA;MACAH,gBAAgB,CAACG,GAAD,CAAhB;MACAL,QAAQ,CAACT,eAAe,CAACU,aAAD,CAAhB,CAAR;IACD,CAXH;EAYD,CAbQ,EAaN,EAbM,CAAT,CAdwB,CA6BxB;EAEA;EACA;EACA;EAEA;;EAKA,MAAMM,WAAW,GAAG,CAACC,IAAD,EAAYC,KAAZ,KAA8B;IAEhD,MAAMC,OAAO,GAAG,CAAC,GAAGd,aAAJ,CAAhB;IACAe,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,OAAxB,EAAiCF,IAAI,CAACK,OAAtC;IACA,MAAMC,YAAY,GAAGJ,OAAO,CAACK,SAAR,CAAkBC,CAAC,IAAIA,CAAC,KAAKR,IAAI,CAACK,OAAlC,CAArB;IACAF,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCE,YAAhC;;IACA,IAAIA,YAAY,IAAI,CAAC,CAArB,EAAwB;MACtBJ,OAAO,CAACO,IAAR,CAAaT,IAAI,CAACK,OAAlB;IACD,CAFD,MAEO;MACLH,OAAO,CAACQ,MAAR,CAAeJ,YAAf,EAA6B,CAA7B;IACD;;IACDd,QAAQ,CAACR,mBAAmB,CAACkB,OAAD,CAApB,CAAR;EACD,CAZD;;EAcA,MAAMS,QAAQ,GAAG;IACfC,WAAW,EAAE;EADE,CAAjB;EAIA,oBACE;IAAA,wBACE,QAAC,MAAD;MACE,YAAY,EAAGC,IAAD,IAAkB,CAC/B;IAFH;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAK,SAAS,EAAC,IAAf;MAAoB,KAAK,EAAEF,QAA3B;MAAA,UACGlB,aAAa,CAACqB,GAAd,CAAkB,CAACd,IAAD,EAAeC,KAAf,KAAiC;QAClD,oBACE,QAAC,aAAD;UACE,IAAI,EAAED,IADR;UAEE,KAAK,EAAEC,KAFT;UAGE,UAAU,EAAE,CAACD,IAAD,EAAYC,KAAZ,KAA8B;YACxCF,WAAW,CAACC,IAAD,EAAOC,KAAP,CAAX;UACD;QALH;UAAA;UAAA;UAAA;QAAA,QADF;MASD,CAVA;IADH;MAAA;MAAA;MAAA;IAAA,QANF;EAAA,gBADF;AAsBD,CAhFM;;GAAMf,I;UAIoCN,W,EAE9BD,W;;;KANNO,I"},"metadata":{},"sourceType":"module"}